/**
 * Created by efe.sozen on 25.07.2016.
 */

(function(){
    "use strict";

  angular
    .module('app.config',[]);

})();

/**
 * Created by efe.sozen on 25.07.2016.
 */
(function(){
    "use strict";

  angular
    .module('app.config')
    .config(appConfig);
  
  appConfig.$inject = ['$stateProvider', '$urlRouterProvider', '$ionicConfigProvider'];
  
  function appConfig($stateProvider, $urlRouterProvider,$ionicConfigProvider) {
    $urlRouterProvider.otherwise('/')
    $ionicConfigProvider.backButton.previousTitleText(false).text('');
    $stateProvider
      .state('home', {
        url: '/',
        templateUrl: 'views/home.html',
        controller:'HomeCtrl as vm'
      })
      .state('cards', {
        url: '/cards',
        templateUrl: 'views/cards.html',
        controller:'CardsCtrl as vm'
      })
      .state('places', {
        url: '/places:searchText',
        templateUrl: 'views/places.html',
        controller:'PlacesCtrl as vm'
      })
      .state('venueDetail', {
        url: '/venueDetail:id',
        templateUrl: 'views/venueDetail.html',
        controller:'VenueDetailCtrl as vm'
      })
      .state('foods', {
        url: '/foods',
        templateUrl: 'views/foods.html',
        controller:'FoodCtrl as vm'
      })
      .state('foodDetail', {
        url: '/foodDetail:id',
        templateUrl: 'views/foodDetail.html',
        controller:'FoodDetailCtrl as vm'
      })
  }

})();

/* Created by efe.sozen on 25.07.2016.*/

(function(){
  "use strict";

  angular
    .module('app.services',[]);

})();


/**
 * Created by efe.sozen on 26.07.2016.
 */
(function(){
  "use strict";

  angular
    .module('app.services')
    .factory('CardsService',CardsService);

  CardsService.$inject = ['$firebaseArray', '$firebaseObject'];

  var cards = [{
    name : 'Lahmacun',
    path : 'img/foods/lahmacun.jpg'
  },
    {
      name : 'Köfte',
      path : 'img/foods/kofte.jpg'
    },
    {
      name : 'Hamburger',
      path : 'img/foods/hamburger.jpg'
    },
    {
      name : 'Pizza',
      path : 'img/foods/pizza.jpg'
    },
    {
      name : 'Çiğ Köfte',
      path : 'img/foods/cigkofte.jpg'
    },
    {
      name : 'Tantuni',
      path : 'img/foods/tantuni.jpg'
    },
    {
      name : 'Kokoreç',
      path : 'img/foods/kokorec.jpg'
    },
    {
      name : 'İskender',
      path : 'img/foods/iskender.jpg'
    },
    {
      name : 'Sandviç',
      path : 'img/foods/sandvic.jpg'
    },
    {
      name : 'Döner',
      path : 'img/foods/doner.jpg'
    }
  ]; 

  function CardsService($firebaseArray,$firebaseObject) {

    var db = "https://whateatapp.firebaseio.com/cards";
    var ref = new Firebase(db);
    var shownCards = [];
    
    var getCards = function(index,successCallBack){
    /*  var a = true;
      var lastKnownKey = null;
      var firstQuery = ref.orderByKey().limitToFirst(100);
      firstQuery.once('value', function(snapshot) {
        snapshot.forEach(function(childSnapshot) {
          lastKnownKey = childSnapshot.key();
          if(a){
            if (shownCards.indexOf(lastKnownKey) === -1) {
              var childRed = ref.child(lastKnownKey);
              childRed.on("value", function (snapshot) {
                var card = snapshot.val();
                shownCards.push(lastKnownKey);
                successCallBack(card);
              });
              a = false;
            }
          }
        });
      });*/

      
     // ref.on("value", function(snapshot) {
     //   var cardList = snapshot.val();
     //   successCallBack(cardList);
     // }, function (errorObject) {
     //   console.log("The read failed: " + errorObject.code);
     // });

      successCallBack(cards);
    };

    return {
      getCards:getCards
    }

  }

})();

/**
 * Created by efe.sozen on 27.07.2016.
 */
(function(){
  "use strict";

  angular
    .module('app.services')
    .factory('FoodService',FoodService);

  function FoodService() {
    return {
      foods: [{
        "name" : "Biber Dolması",
        "path" : ""
      }
      ]
    }

  }

})();

/**
 * Created by efe.sozen on 25.07.2016.
 */

(function(){
  "use strict";

  angular
    .module('app.services')
    .factory('FoursquareService',FoursquareService); 

  FoursquareService.$inject = ['$http'];

  function FoursquareService($http){
    var apiUrl          = 'https://api.foursquare.com/v2/',
      clientId        = '0WT1LGBA2MSIWL2KRMKWXZSQRZVMJTIWCUCM20H3XAPAAUHF',
      clientSecret    = 'JC5GEVHZWSXOKSORYTRKVLECCKSCQUAR01L5TWU5N4TGQC5Q',
      v               = '20160322';

    var searchVenue = function(searchText,location, success){
      $http({
        url: apiUrl + 'venues/explore?',
        method: "GET",
        params: {
          client_id: clientId,
          client_secret: clientSecret,
          v: v,
          ll:location,
          llAcc: 3000.0,
          query: searchText,
          radius:4000

        }
      })
        .success(function(data) {
          success(data);
        });
    }

    var getVenue = function(venueId, success){
      $http({
        url: apiUrl + 'venues/' + venueId,
        method: "GET",
        params: {
          client_id: clientId,
          client_secret: clientSecret,
          v: v
        }
      })
        .success(function(data) {
          success(data);
        });
    }


    var getMenu = function(venueId,success){
      $http({
        url: apiUrl + 'venues/' + venueId + '/menu',
        method: "GET",
        params: {
          client_id: clientId,
          client_secret: clientSecret,
          v: v
        }
      })
        .success(function(data) {
          success(data);
        });
    }

    return {
      searchVenue: searchVenue,
      getVenue: getVenue,
      getMenu:getMenu
    }
  }

})();

/**
 * Created by efe.sozen on 25.07.2016.
 */
(function(){
  "use strict";

  angular.module('app.controllers',[]);

})();


/**
 * Created by efe.sozen on 26.07.2016.
 */

(function(){
  "use strict";

  angular
    .module('app.controllers')
    .controller('CardsCtrl',CardsCtrl);

  CardsCtrl.$inject = ['$state', 'CardsService', '$ionicLoading'];

//TODO: fonksiyonlar düzenlenecek
  function CardsCtrl($state,CardsService,$ionicLoading){
    var vm = this;
    var cards = [];
    var shownCards = [];

    vm.card = {};
    vm.changeCards = changeCard;
    vm.selectCard = selectCard;

    init();

    /******* functions *********/

    function init(){
      getCards();
    }

    function selectCard(card){
      $state.go('places',{ searchText:card});
     
    }
    
    function changeCard() {
      getCards();
    }

    function changeCards() {
      var card = cards[Math.floor(Math.random()*cards.length)];
      if(shownCards.indexOf(card) === -1){
        vm.card = card;
        shownCards.push(card);
      }
      else{
        changeCards();
      }

      if(shownCards.length == cards.length){
        /*Done*/
        resetCards();
      }
    }

    function resetCards() {
      shownCards = [];
      changeCards();
    }
    
    function getCard() {
      vm.card = {};
      $ionicLoading.show({
        template: 'Loading...'
      }).then(function(){
        console.log("The loading indicator is now displayed");
      });
      CardsService.getCards(0,function (d) {
        vm.card = d;
        $ionicLoading.hide().then(function(){
          console.log("The loading indicator is now hidden");
        });
      });
    }


    function getCards() {
      $ionicLoading.show({
        template: 'Loading...'
      }).then(function(){
        console.log("The loading indicator is now displayed");
      });
      CardsService.getCards(1,function (d) {
       cards = d;
       changeCards();
        $ionicLoading.hide().then(function(){
          console.log("The loading indicator is now hidden");
        });
      });
    }
  }
})();

/**
 * Created by efe.sozen on 25.07.2016.
 */
(function(){
  "use strict";

  angular
    .module('app.controllers')
    .controller('HomeCtrl',HomeCtrl);

  HomeCtrl.$inject = ['$state', '$ionicPopup'];

  function HomeCtrl($state,$ionicPopup) {
    var vm = this;

    vm.title = 'Hello World';
    vm.whatEat = whatEat; 
    vm.whatCook = whatCook;

    vm.whatEatImg = "img/neyesem_back.png";
    vm.whatCookImg = "img/nepisirsem_back.png";
    vm.centerLogoImg = "img/center_logo.png";

    function whatEat(){
      $state.go('cards')
    }

    function whatCook () {
      $state.go('foods')
    }

  }

})();



/**
 * Created by efe.sozen on 26.07.2016.
 */
(function () {
    "use strict";

    angular
        .module('app.controllers')
        .controller('PlacesCtrl', PlacesCtrl);

    PlacesCtrl.$inject = ['FoursquareService', '$stateParams', '$state', '$cordovaGeolocation', '$ionicLoading'];

    function PlacesCtrl(FoursquareService, $stateParams, $state, $cordovaGeolocation, $ionicLoading) {
        var vm = this;
        var searchText = '';
        vm.venues = [];
        vm.title = '';
        vm.getVenue = getVenue;

        var posOptions = {timeout: 10000, enableHighAccuracy: false};
        $cordovaGeolocation
            .getCurrentPosition(posOptions)
            .then(function (position) {
                var location = position.coords.latitude + ',' + position.coords.longitude;
                searchVenue(location);
            }, function (err) {
                // error
            });

        function searchVenue(location) {
            if ($stateParams) {
                searchText = $stateParams.searchText;
                vm.title = searchText;
                $ionicLoading.show();
                FoursquareService.searchVenue(searchText, location, function (data) {
                    var response = data.response;
                    angular.forEach(response.groups[0].items, function (v, k) {
                        if (v.venue.hours && v.venue.hours.isOpen) {
                            if (v.venue.rating) {
                                v.venue.rating = v.venue.rating.toFixed(1);
                                v.venue.location.distance = parseFloat((v.venue.location.distance / 1000).toFixed(1));
                                vm.venues.push(v);
                            }
                        }
                    })
                    // vm.venues = response.groups[0].items;//response.venues;
                    $ionicLoading.hide();
                })
            }
        }


        function getVenue(venueId) {
            $state.go('venueDetail', {id: venueId});
        }

    }

})();

/**
 * Created by efe.sozen on 26.07.2016.
 */
(function(){
  "use strict";

  angular
    .module('app.controllers')
    .controller('VenueDetailCtrl',VenueDetailCtrl);

  VenueDetailCtrl.$inject = ['FoursquareService', '$stateParams', '$ionicLoading'];

  function VenueDetailCtrl(FoursquareService,$stateParams,$ionicLoading){
    var vm = this;

    vm.venue = {};

    if($stateParams){
      var id = $stateParams.id;
      $ionicLoading.show();
      FoursquareService.getVenue(id,function(data){
        vm.venue = data.response.venue;

        if (vm.venue.photos.groups[0]) {

          vm.venue.thumbnail = vm.venue.photos.groups[0].items[0].prefix + '40x40' + vm.venue.photos.groups[0].items[0].suffix;
          vm.venue.photo = vm.venue.photos.groups[0].items[1].prefix + '300x300' + vm.venue.photos.groups[0].items[1].suffix;

        }

        $ionicLoading.hide();
        if(vm.venue.contact.phone)
          vm.showPhone = vm.venue.contact.phone.replace('+90','').replace(/(\d\d\d)(\d\d\d)(\d\d\d\d)/, "($1) $2 $3");

        if(vm.venue.location.city)
          vm.showState = vm.venue.location.city + " / " + vm.venue.location.state;
        console.log(data.response.venue);
      });

      FoursquareService.getMenu(id,function(data) {
        //console.log('menu : ' + data); menu data 
      });
    }



    vm.openLink = function (link) {
      window.open(link, '_system');
    };

  }

})();

/**
 * Created by efe.sozen on 26.07.2016.
 */
(function(){
  "use strict";

  angular
    .module('app.controllers')
    .controller('FoodCtrl',FoodCtrl);

  FoodCtrl.$inject = ['$state', 'FoodService'];

  function FoodCtrl($state,FoodService) {
    var vm = this;
    
  }

})();

/**
 * Created by efe.sozen on 26.07.2016.
 */
(function(){
  "use strict";

  angular
    .module('app.controllers')
    .controller('FoodDetailCtrl',FoodDetailCtrl);

  FoodDetailCtrl.$inject = ['$stateParams'];

  function FoodDetailCtrl($stateParams) {

    var vm = this;
    if($stateParams) {
      var id = $stateParams.id;

      vm.food = {
        name : "Biber Dolması",
        imageUrl : "http://farm4.static.flickr.com/3448/3797187751_efc00e3546.jpg",
        description : "Dolmalık biberlerimizi temizleyelim. Soğanları, domatesi küçük küçük doğrayalım. Domatesin kenarlarını biberlerin üstünü kapatmak için kullanacağız o yüzden önce kapatmak için kullanacaklarımızı kesersek daha iyi olur. İçini yemek harcında kullanabiliriz. Bir kaba hazırladığımız soğan, pirinç, salça, maydanoz, domates, karabiber, tuz, nane ve çok az sıvıyağı ekleyip iyice karıştıralım. Daha sonra bu harcı biberlere dolduralım. Harcı doldurduğumuz biberleri, tencereye dizelim. Harcı yaptığımız kabın içine soğuk su koyalım o artık göz kararı olacak biberlerin yarısına kadar gelecek şekilde.Kabın içine koyduğumuz suya 1 yemek kaşığı salça ekleyelim ve eritelim. Bu karışımı biberlerin üstüne gelmeyecek şekilde tencereye, biberlerin yarısına gelene kadar dökelim. Kestiğimiz domateslerle biberlerin üstünü kapatalım. Daha sonra biberlerin üstüne çok az sıvıyağ ve zeytinyağı gezdirelim. Kısık ateşte yemeğimizi pişirelim. Afiyet olsun."
      }
    }
  }

})();

(function(){
  "use strict";

  angular.module('whatEatApp', [
    'ionic',
    'firebase',
    'ngCordova',
    'app.config',
    'app.services',
    'app.controllers'
  ])


   .run(runBlock);

  runBlock.$inject = ['$ionicPlatform', '$ionicPopup'];

  function runBlock($ionicPlatform,$ionicPopup) {
    $ionicPlatform.ready(function() {
      if(window.cordova && window.cordova.plugins.Keyboard) {
        // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
        // for form inputs)
        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);

        // Don't remove this line unless you know what you are doing. It stops the viewport
        // from snapping when text inputs are focused. Ionic handles this internally for
        // a much nicer keyboard experience.
        cordova.plugins.Keyboard.disableScroll(true);
      }
      if(window.StatusBar) {
        StatusBar.styleDefault();
      }

      if(window.Connection) {
        if(navigator.connection.type == Connection.NONE) {
          var alertPopup = $ionicPopup.alert({
            title: 'Uyarı',
            template: 'İnternet bağlantısı bulunamadı.',
            okText: 'Tamam',
          });

          alertPopup.then(function(res) {
            //alert("there is no connection");
            ionic.Platform.exitApp();
          });
        }

        cordova.plugins.diagnostic.isLocationEnabled(function(enabled) {
          if(!enabled){
            var confirmPopup = $ionicPopup.confirm({
              title: 'Uyarı',
              template: 'Bu uygulama için konum ayarlarınızı açmanız gerekiyor. Konum açılsın mı?',
              okText: 'Evet',
              okType: 'button-energized',
              cancelText: 'Hayır',
            });

            confirmPopup.then(function(res) {
              if(res) {
                cordova.plugins.diagnostic.switchToLocationSettings();
              } else {
                ionic.Platform.exitApp();
              }
            });
          }
        }, function(error) {
          // alert("The following error occurred: " + error);
          ionic.Platform.exitApp();
        });
      }
    });
  }

})();
